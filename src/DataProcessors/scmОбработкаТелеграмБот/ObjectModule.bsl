Функция ИнициализироватьСтруктуру() Экспорт 
	Ответ = Новый Структура();
	Ответ.Вставить("ОтображатьСетку", Ложь);
	Ответ.Вставить("Элементы", Новый Массив());
	Возврат Ответ;
КонецФункции

Функция ПостроитьСхему(СтруктураСхемы) Экспорт 
	ТекстXML = СериализоватьВXml(СтруктураСхемы);
	Преобразование = Новый ПреобразованиеXSL;
	Преобразование.ЗагрузитьИзСтроки(ПолучитьШаблонXSLT());
	ТелоXDTO = Преобразование.ПреобразоватьИзСтроки(ТекстXML);
	Возврат ДесериализоватьИзXml(ТелоXDTO);
КонецФункции

// Функция - Добавить действие
//
// Параметры:
//  СтруктураСхемы	 - Структура - 
//  Заголовок			 - Строка - 
//  Пояснение			 - Строка - 
//  Координаты		 - Структура - Если не указано, элемент будет расположен на 20 ниче предыдущего, если первый то x,y = 10
//  Размер				 - Структура - Если не указано размеры будут Ширина,Высота - 100, 50 
// 
// Возвращаемое значение:
//   - 
//
Функция ДобавитьДействие(СтруктураСхемы, ИмяЭлемента = "", Заголовок = "", Пояснение = "", Координаты = Неопределено, Размер = Неопределено, АвтоматическиСвязыватьСПредыдущем = Ложь) Экспорт 
	Перем КоординатыПоУмолч, РазмерПоУмолч;
	ЭлементыСхемы = СтруктураСхемы.Элементы;
	ПолучитьКоординатыИРазмерПоУмолчанию(ЭлементыСхемы, КоординатыПоУмолч, РазмерПоУмолч);
	ПоследнийЭлемент = ПолучитьПоследнийЭлемент(ЭлементыСхемы);
	Элемент = ДобавитьЭлемент(ЭлементыСхемы, "Действие", ИмяЭлемента, Заголовок, ?(Координаты = Неопределено, КоординатыПоУмолч, Координаты), ?(Размер = Неопределено, РазмерПоУмолч, Размер));
	Элемент.Вставить("Пояснение", Пояснение);
	Если АвтоматическиСвязыватьСПредыдущем И ПоследнийЭлемент <> Неопределено Тогда
		СвязатьЭлементы(СтруктураСхемы, ПоследнийЭлемент, Элемент, 4, 2);
	КонецЕсли;
	
	Возврат Элемент;
КонецФункции

// Функция - Добавить элемент
//
// Параметры:
//  ЭлементыСхемы	 - Массив - 
//  Тип						 - Строка - 
//  Заголовок			 - Строка - 
//  Координаты		 - Структура - Если не указано, элемент будет расположен на 20 ниче предыдущего, если первый то x,y = 10
//  Размер				 - Структура - Если не указано размеры будут Ширина,Высота - 100, 50 
// 
// Возвращаемое значение:
//   - 
//
Функция ДобавитьЭлемент(ЭлементыСхемы, Тип, ИмяЭлемента = "", Заголовок = "", Координаты = Неопределено, Размер = Неопределено) 
	Индекс = ЭлементыСхемы.Количество()+1;
		
	Элемент = Новый Структура();
	Элемент.Вставить("Индекс", Индекс);
	Элемент.Вставить("Тип", Тип);
	Элемент.Вставить("Имя", ?(ЗначениеЗаполнено(ИмяЭлемента), ИмяЭлемента, СтрШаблон("%1%2", Тип, Индекс)));
	Элемент.Вставить("Заголовок", Заголовок);
	Если Координаты <> Неопределено Тогда
		Элемент.Вставить("Координаты", Координаты);
	КонецЕсли;
	Если Размер <> Неопределено Тогда
		Элемент.Вставить("Размер", Размер);
	КонецЕсли;
	
	ЭлементыСхемы.Добавить(Элемент);
	Возврат Элемент;	
КонецФункции

// Процедура - Связать элементы
//
// Параметры:
//  СтруктураСхемы - Структура	 - 
//  ЭлементСхемы1	 - Структура	 - 
//  ЭлементСхемы2	 - Структура	 - 
//  ТочкаВыхода		 - Число	 - Точки входа и выхода начинают отсчет с левой стороны и по часовой стрелки, по дефолту точка 2 - это вход сверху
//  ТочкаВхода		 - Число	 - Точки входа и выхода начинают отсчет с левой стороны и по часовой стрелки, по дефолту точка 2 - это вход сверху
//
Процедура СвязатьЭлементы(СтруктураСхемы, ЭлементСхемы1, ЭлементСхемы2, ТочкаВыхода = 2, ТочкаВхода = 2, Надпись = "") Экспорт 
	Элемент = ДобавитьЭлемент(СтруктураСхемы.Элементы, "Линия",, Надпись);
	Элемент.Вставить("Соединение", Новый Структура("Источник,Назначение", ЭлементСхемы1.Индекс, ЭлементСхемы2.Индекс));
	Элемент.Вставить("Порты", Новый Структура("Источник,Назначение", ТочкаВыхода, ТочкаВхода));	
	// Точки начинаются с левой верхней, и по часовой стрелки. Если точки явно не заданы, будут использованы точки из координат.
	// Точки имеет смысл явно задавать для элементов не прямоугольной формы (условие, старт и т.д.) и линий
	// Координаты линии зависят от точек выходи и входа, например, если точка выхода у нас 1 или 3 (т.е. по бокам) то линия будет рисоваться или с права или с лева с середины фигуры
	КоординатыВыход = ПолучитьКоординатыПортов(ЭлементСхемы1, ТочкаВыхода);
	КоординатыВход = ПолучитьКоординатыПортов(ЭлементСхемы2, ТочкаВхода);
	Точки = Новый Массив();
	Точки.Добавить(Новый Структура("x,y", КоординатыВыход.x, КоординатыВыход.y));
	Точки.Добавить(Новый Структура("x,y", КоординатыВход.x, КоординатыВход.y));
	Элемент.Вставить("Точки", Точки);
КонецПроцедуры

Функция ПолучитьПоследнийЭлемент(ЭлементыСхемы) Экспорт 
	Для а = -(ЭлементыСхемы.Количество()-1) По 0 Цикл
		Если ЭлементыСхемы[-а].Тип <> "Линия"	Тогда
			Возврат ЭлементыСхемы[-а]; 	
		КонецЕсли;
	КонецЦикла;
КонецФункции

Процедура ПолучитьКоординатыИРазмерПоУмолчанию(ЭлементыСхемы, Координаты, Размер)
	Если ЭлементыСхемы.Количество() > 0 Тогда
		ПредЭлемент = ПолучитьПоследнийЭлемент(ЭлементыСхемы); 
		Если ПредЭлемент = Неопределено Тогда
			Координаты = Новый Структура("Верх,Лево", 10, 10);	
			Возврат;
		КонецЕсли;	
		НизПредЭлемента = ПредЭлемент.Координаты.Верх	+ ПредЭлемент.Размер.Высота;
		Координаты = Новый Структура("Верх,Лево", НизПредЭлемента + 20, ПредЭлемент.Координаты.Лево);	
	Иначе
		Координаты = Новый Структура("Верх,Лево", 10, 10);	
	КонецЕсли;
	Размер = Новый Структура("Ширина,Высота", 100, 50);	
КонецПроцедуры

Функция ПолучитьКоординатыПортов(ЭлементСхемы, Порт)
	Ответ = Новый Структура("x,y", 0, 0);
	Если Порт = 1 Тогда
		Ответ.x = ЭлементСхемы.Координаты.Лево;	
		Ответ.y = (ЭлементСхемы.Координаты.Верх + ЭлементСхемы.Размер.Высота) - (ЭлементСхемы.Размер.Высота / 2);	
	ИначеЕсли Порт = 2 Тогда
		Ответ.x = (ЭлементСхемы.Координаты.Лево + ЭлементСхемы.Размер.Ширина) - (ЭлементСхемы.Размер.Ширина / 2);	
		Ответ.y = ЭлементСхемы.Координаты.Верх;	
	ИначеЕсли Порт = 3 Тогда
		Ответ.x = ЭлементСхемы.Координаты.Лево + ЭлементСхемы.Размер.Ширина;	
		Ответ.y = (ЭлементСхемы.Координаты.Верх + ЭлементСхемы.Размер.Высота) - (ЭлементСхемы.Размер.Высота / 2);	
	ИначеЕсли Порт = 4 Тогда
		Ответ.x = (ЭлементСхемы.Координаты.Лево + ЭлементСхемы.Размер.Ширина) - (ЭлементСхемы.Размер.Ширина / 2);	
		Ответ.y = ЭлементСхемы.Координаты.Верх + ЭлементСхемы.Размер.Высота;	
	ИначеЕсли ЭлементСхемы.Тип = "ВыборВарианта" И Порт >= 6 Тогда
		// у этого элемента портов больше
		// ширина одного варианта 20 уе
		// Левая сторона варианта 1, это порт 6 (не знаю почему именно 6), правая - порт 7
		// второй вариянт, левая 8, правая 9 и т.д.
		ОбщаяШиринаВариантов = ЭлементСхемы.Варианты.Количество() * 20;
		ОсновнаяШирина = ЭлементСхемы.Размер.Ширина - ОбщаяШиринаВариантов;
		НомерВарианта = Окр((Порт - 5) / 2, 0, 1); // 5 - это 6 (т.к. с 6 порта начинается нумерация вариантов) -1
		ШиринаВарианта = 20;
		
		// четный порт, значит левая сторона, нечетный, правая
		Если Порт % 2 = 0 Тогда
			Ответ.x = ЭлементСхемы.Координаты.Лево;
		Иначе
			Ответ.x = ЭлементСхемы.Координаты.Лево + ЭлементСхемы.Размер.Ширина;	
		КонецЕсли;
		Ответ.y = ЭлементСхемы.Координаты.Верх + ОсновнаяШирина + ((НомерВарианта-1) * ШиринаВарианта) + ШиринаВарианта / 2; 
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

Функция ПолучитьШаблонXSLT()
	Возврат ЭтотОбъект.ПолучитьМакет("XSLT_graphscheme").ПолучитьТекст();
КонецФункции

Функция СериализоватьВXml(Значение)  
	ЗаписьXML = новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Значение);	
	Возврат ЗаписьXML.Закрыть();
КонецФункции

Функция ДесериализоватьИзXml(ТекстXML)  
	Перем ЧтениеXML;	
	ЧтениеXML = новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстXML);
	Возврат СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
КонецФункции